{"version":3,"file":"string-literal.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/string-literal.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,sDAAqD;AACrD,0CAAoD;AAEpD,+CAA2D;AAG3D;IAAiD,+CAA0C;IAA3F;;IAeA,CAAC;IAbC,gDAAU,GAAV;QACE,iBAAM,UAAU,WAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,UAAC,CAAoB,IAAK,OAAA,CAAC,YAAY,0BAAiB,EAA9B,CAA8B,CAAC;IAC3E,CAAC;IAED,8CAAQ,GAAR,UAAS,aAAgC,EAAE,GAAS;QAClD,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;QAEhB,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;QAEhC,OAAO,GAAG,CAAC;IACb,CAAC;IAbU,2BAA2B;QADvC,qBAAS,CAAC,EAAC,IAAI,EAAE,gCAAgC,EAAC,CAAC;OACvC,2BAA2B,CAevC;IAAD,kCAAC;CAAA,AAfD,CAAiD,oCAAuB,GAevE;AAfY,kEAA2B","sourcesContent":["import { Component } from '../../../utils/component';\r\nimport { StringLiteralType } from '../../../models';\r\n\r\nimport { TypeSerializerComponent } from '../../components';\r\n\r\n@Component({name: 'serializer:string-literal-type'})\r\nexport class StringLiteralTypeSerializer extends TypeSerializerComponent<StringLiteralType> {\r\n\r\n  initialize(): void {\r\n    super.initialize();\r\n    this.supports = (t: StringLiteralType) => t instanceof StringLiteralType;\r\n  }\r\n\r\n  toObject(stringLiteral: StringLiteralType, obj?: any): any {\r\n    obj = obj || {};\r\n\r\n    obj.value = stringLiteral.value;\r\n\r\n    return obj;\r\n  }\r\n\r\n}\r\n"]}