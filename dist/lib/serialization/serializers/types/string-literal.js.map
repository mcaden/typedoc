{"version":3,"file":"string-literal.js","sourceRoot":"","sources":["../../../../../src/lib/serialization/serializers/types/string-literal.ts"],"names":[],"mappings":";;;;;;;;AAAA,wDAAqD;AACrD,4CAAoD;AAEpD,iDAA2D;AAG3D,IAAa,2BAA2B,GAAxC,MAAa,2BAA4B,SAAQ,oCAA0C;IAEzF,QAAQ,CAAC,CAAU;QACjB,OAAO,CAAC,YAAY,0BAAiB,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,aAAgC,EAAE,GAAS;QAClD,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;QAEhB,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;QAEhC,OAAO,GAAG,CAAC;IACb,CAAC;CAEF,CAAA;AAdY,2BAA2B;IADvC,qBAAS,CAAC,EAAC,IAAI,EAAE,gCAAgC,EAAC,CAAC;GACvC,2BAA2B,CAcvC;AAdY,kEAA2B","sourcesContent":["import { Component } from '../../../utils/component';\r\nimport { StringLiteralType } from '../../../models';\r\n\r\nimport { TypeSerializerComponent } from '../../components';\r\n\r\n@Component({name: 'serializer:string-literal-type'})\r\nexport class StringLiteralTypeSerializer extends TypeSerializerComponent<StringLiteralType> {\r\n\r\n  supports(t: unknown) {\r\n    return t instanceof StringLiteralType;\r\n  }\r\n\r\n  toObject(stringLiteral: StringLiteralType, obj?: any): any {\r\n    obj = obj || {};\r\n\r\n    obj.value = stringLiteral.value;\r\n\r\n    return obj;\r\n  }\r\n\r\n}\r\n"]}