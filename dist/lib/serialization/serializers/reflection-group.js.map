{"version":3,"file":"reflection-group.js","sourceRoot":"","sources":["../../../../src/lib/serialization/serializers/reflection-group.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,mDAAkD;AAClD,gEAA+D;AAE/D,4CAAoD;AAGpD;IAA+C,6CAAoC;IADnF;QAAA,qEAoCC;QAvBC,oBAAc,GAAG,2BAAyB,CAAC,cAAc,CAAC;QAC1D,0BAAoB,GAAG,iCAAe,CAAC;;IAsBzC,CAAC;kCAnCY,yBAAyB;IAOnB,wCAAc,GAA/B,UAAgC,QAAa;QAC3C,OAAO,QAAQ,YAAY,iCAAe,CAAC;IAC7C,CAAC;IAMD,8CAAU,GAAV;QACE,iBAAM,UAAU,WAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,UAAC,CAAkB,IAAK,OAAA,CAAC,YAAY,iCAAe,EAA5B,CAA4B,CAAC;IACvE,CAAC;IAED,4CAAQ,GAAR,UAAS,KAAsB,EAAE,GAAS;QACxC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;QAEhB,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE;YACjB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,IAAI,EAAG,KAAK,CAAC,IAAI;SAClB,CAAC,CAAC;QAEH,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAE,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,EAAE,EAAR,CAAQ,CAAE,CAAC;SACxD;QAED,OAAO,GAAG,CAAC;IACb,CAAC;;IA/BM,kCAAQ,GAAG,IAAI,CAAC;IAFZ,yBAAyB;QADrC,qBAAS,CAAC,EAAC,IAAI,EAAE,6BAA6B,EAAC,CAAC;OACpC,yBAAyB,CAmCrC;IAAD,gCAAC;CAAA,AAnCD,CAA+C,gCAAmB,GAmCjE;AAnCY,8DAAyB","sourcesContent":["import { Component } from '../../utils/component';\r\nimport { ReflectionGroup } from '../../models/ReflectionGroup';\r\n\r\nimport { SerializerComponent } from '../components';\r\n\r\n@Component({name: 'serializer:reflection-group'})\r\nexport class ReflectionGroupSerializer extends SerializerComponent<ReflectionGroup> {\r\n\r\n  static PRIORITY = 1000;\r\n\r\n  /**\r\n   * Filter for instances of [[ReflectionGroup]]\r\n   */\r\n  protected static serializeGroup(instance: any): boolean {\r\n    return instance instanceof ReflectionGroup;\r\n  }\r\n\r\n  // use same fn for every instance\r\n  serializeGroup = ReflectionGroupSerializer.serializeGroup;\r\n  serializeGroupSymbol = ReflectionGroup;\r\n\r\n  initialize(): void {\r\n    super.initialize();\r\n    this.supports = (r: ReflectionGroup) => r instanceof ReflectionGroup;\r\n  }\r\n\r\n  toObject(group: ReflectionGroup, obj?: any): any {\r\n    obj = obj || {};\r\n\r\n    Object.assign(obj, {\r\n      title: group.title,\r\n      kind:  group.kind\r\n    });\r\n\r\n    if (group.children && group.children.length > 0) {\r\n      obj.children = group.children.map( child => child.id );\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n}\r\n"]}