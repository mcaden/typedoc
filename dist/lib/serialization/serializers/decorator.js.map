{"version":3,"file":"decorator.js","sourceRoot":"","sources":["../../../../src/lib/serialization/serializers/decorator.ts"],"names":[],"mappings":";;;;;;;;AAAA,qDAAkD;AAElD,8CAAoD;AACpD,kEAA8D;AAG9D,IAAa,4BAA4B,GAAzC,MAAa,4BAA6B,SAAQ,gCAAqC;IADvF;;QAYE,yBAAoB,GAAG,oCAAgB,CAAC;IA2B1C,CAAC;IA/BC,cAAc,CAAC,QAAa;QAC1B,OAAO,QAAQ,YAAY,oCAAgB,CAAC;IAC9C,CAAC;IAID,UAAU;QACN,KAAK,CAAC,UAAU,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,CAAU;QACjB,OAAO,CAAC,YAAY,oCAAgB,CAAC;IACvC,CAAC;IAED,QAAQ,CAAC,gBAAkC,EAAE,GAAS;QAClD,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;QAEhB,MAAM,SAAS,GAAG,gBAAgB,CAAC,SAAS,CAAC;QAC7C,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAE1B,IAAI,SAAS,CAAC,IAAI,EAAE;YAClB,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAChD;QAED,IAAI,SAAS,CAAC,SAAS,EAAE;YACvB,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;SACrC;QAED,OAAO,GAAG,CAAC;IACf,CAAC;CAEF,CAAA;AApCQ,qCAAQ,GAAG,IAAI,CAAC;AAFZ,4BAA4B;IADxC,qBAAS,CAAC,EAAC,IAAI,EAAE,gCAAgC,EAAC,CAAC;GACvC,4BAA4B,CAsCxC;AAtCY,oEAA4B","sourcesContent":["import { Component } from '../../utils/component';\r\n\r\nimport { SerializerComponent } from '../components';\r\nimport { DecoratorWrapper } from './models/decorator-wrapper';\r\n\r\n@Component({name: 'serializer:decorator-container'})\r\nexport class DecoratorContainerSerializer extends SerializerComponent<DecoratorWrapper> {\r\n\r\n  static PRIORITY = 1000;\r\n\r\n  /**\r\n   * Filter for instances of [[DecoratorWrapper]]\r\n   */\r\n  serializeGroup(instance: any): boolean {\r\n    return instance instanceof DecoratorWrapper;\r\n  }\r\n\r\n  serializeGroupSymbol = DecoratorWrapper;\r\n\r\n  initialize(): void {\r\n      super.initialize();\r\n  }\r\n\r\n  supports(s: unknown) {\r\n    return s instanceof DecoratorWrapper;\r\n  }\r\n\r\n  toObject(decoratorWrapper: DecoratorWrapper, obj?: any): any {\r\n      obj = obj || {};\r\n\r\n      const decorator = decoratorWrapper.decorator;\r\n      obj.name = decorator.name;\r\n\r\n      if (decorator.type) {\r\n        obj.type = this.owner.toObject(decorator.type);\r\n      }\r\n\r\n      if (decorator.arguments) {\r\n        obj.arguments = decorator.arguments;\r\n      }\r\n\r\n      return obj;\r\n  }\r\n\r\n}\r\n"]}