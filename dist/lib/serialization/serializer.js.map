{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../../../src/lib/serialization/serializer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,kCAA8C;AAC9C,gDAA+D;AAI/D,2CAAmD;AACnD,mCAA0C;AAG1C;IAAgC,8BAAyD;IAAzF;;IAoHA,CAAC;mBApHY,UAAU;IAiBrB,+BAAU,GAAV;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAA2D,CAAC;QACjF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,iCAAY,GAAZ,UAA6D,IAAY,EAAE,cAAqC;QAC9G,IAAM,SAAS,GAAG,iBAAM,YAAY,YAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QAE3D,IAAI,SAAS,CAAC,cAAc,IAAI,SAAS,CAAC,oBAAoB,EAAE;YAC9D,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YAEtD,IAAI,CAAC,KAAK,EAAE;gBACV,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,oBAAoB,EAA3C,CAA2C,CAAC;uBAC3F,EAAE,MAAM,EAAE,SAAS,CAAC,oBAAoB,EAAG,KAAK,EAAE,EAAE,EAAE,CAAC;gBAC5D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;gBACjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;aAC5C;YACD,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,EAArC,CAAqC,CAAC,CAAC;YAElE,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;IAMD,oCAAe,GAAf,UAAgB,IAAY;QAC1B,IAAM,SAAS,GAAG,iBAAM,eAAe,YAAC,IAAI,CAAC,CAAC;QAC9C,IAAM,MAAM,GAAG,SAAS,IAAI,SAAS,CAAC,oBAAoB,CAAC;QAC3D,IAAI,MAAM,EAAE;YACV,IAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;YAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACjD,IAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAE,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,MAAM,EAAZ,CAAY,CAAE,CAAC;gBAC3D,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;oBACZ,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;oBAC/B,MAAM;iBACP;aACF;SACF;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,wCAAmB,GAAnB;QACE,iBAAM,mBAAmB,WAAE,CAAC;QAE5B,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAA2D,CAAC;QACjF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,6BAAQ,GAAR,UAAS,KAAU,EAAE,GAAS;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;aAC1B,MAAM,CAAE,UAAC,MAAM,EAAE,IAAI,IAAK,OAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,EAA5B,CAA4B,EAAE,GAAG,CAAC,CAAC;IAClE,CAAC;IAQD,oCAAe,GAAf,UAAgB,KAAwB,EAAE,SAAsC;QAC9E,IAAM,UAAU,GAAG,IAAI,uBAAc,CAAC,YAAU,CAAC,WAAW,CAAC,CAAC;QAE9D,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE;YAChC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;SAC5C;QACD,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;QAC3B,IAAI,OAAO,GAAQ,UAAU,CAAC,MAAM,GAAG,EAAE,CAAC;QAE1C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACzB,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAExC,IAAM,QAAQ,GAAG,IAAI,uBAAc,CAAC,YAAU,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,SAAS,IAAI,SAAS,CAAC,GAAG,EAAE;YAC9B,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;SACxC;QACD,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAEvB,OAAO,OAAO,CAAC;IACjB,CAAC;IAEO,+BAAU,GAAlB,UAAmB,KAAU;QAC3B,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACtD,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;gBACzB,IAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC1D,KAAuB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW,EAAE;oBAA/B,IAAI,UAAU,oBAAA;oBACjB,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;wBAC9B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBACzB;iBACF;aACF;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;;IA7GM,sBAAW,GAAG,OAAO,CAAC;IAMtB,oBAAS,GAAG,KAAK,CAAC;IAZd,UAAU;QADtB,qBAAS,CAAC,EAAC,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,gCAAmB,EAAC,CAAC;OACpE,UAAU,CAoHtB;IAAD,iBAAC;CAAA,AApHD,CAAgC,0BAAkB,GAoHjD;AApHY,gCAAU","sourcesContent":["import { ChildableComponent } from '../utils';\r\nimport { Component, ComponentClass } from '../utils/component';\r\nimport { Application } from '../application';\r\nimport { ProjectReflection } from '../models';\r\n\r\nimport { SerializerComponent } from './components';\r\nimport { SerializeEvent } from './events';\r\n\r\n@Component({name: 'serializer', internal: true, childClass: SerializerComponent})\r\nexport class Serializer extends ChildableComponent<Application, SerializerComponent<any>> {\r\n\r\n  /**\r\n   * Triggered when the [[Serializer]] begins transforming a project.\r\n   * @event EVENT_BEGIN\r\n   */\r\n  static EVENT_BEGIN = 'begin';\r\n\r\n  /**\r\n   * Triggered when the [[Serializer]] has finished transforming a project.\r\n   * @event EVENT_END\r\n   */\r\n  static EVENT_END = 'end';\r\n\r\n  private router: Map<any, { symbol: any, group: SerializerComponent<any>[] }>;\r\n  private routes: any[];\r\n\r\n  initialize(): void {\r\n    this.router = new Map<any, { symbol: any, group: SerializerComponent<any>[] }>();\r\n    this.routes = [];\r\n  }\r\n\r\n  addComponent<T extends SerializerComponent<any> & Component>(name: string, componentClass: T | ComponentClass<T>): T {\r\n    const component = super.addComponent(name, componentClass);\r\n\r\n    if (component.serializeGroup && component.serializeGroupSymbol) {\r\n      let match = this.router.get(component.serializeGroup);\r\n\r\n      if (!match) {\r\n        match = Array.from(this.router.values()).find( v => v.symbol === component.serializeGroupSymbol)\r\n          || { symbol: component.serializeGroupSymbol , group: [] };\r\n        this.router.set(component.serializeGroup, match);\r\n        this.routes.push(component.serializeGroup);\r\n      }\r\n      match.group.push(component);\r\n      match.group.sort((a, b) => (b.priority || 0) - (a.priority || 0));\r\n\r\n      return component;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a child component from the registry.\r\n   * @param name The name the component registered as\r\n   */\r\n  removeComponent(name: string): SerializerComponent<any> {\r\n    const component = super.removeComponent(name);\r\n    const symbol = component && component.serializeGroupSymbol;\r\n    if (symbol) {\r\n      const values = Array.from(this.router.values());\r\n      for (let i = 0, len = values.length; i < len; i++) {\r\n        const idx = values[i].group.findIndex( o => o === symbol );\r\n        if (idx > -1) {\r\n          values[i].group.splice(idx, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return component;\r\n  }\r\n\r\n  removeAllComponents() {\r\n    super.removeAllComponents();\r\n\r\n    this.router = new Map<any, { symbol: any, group: SerializerComponent<any>[] }>();\r\n    this.routes = [];\r\n  }\r\n\r\n  toObject(value: any, obj?: any): any {\r\n    return this.findRoutes(value)\r\n      .reduce( (result, curr) => curr.toObject(value, result), obj);\r\n  }\r\n\r\n  /**\r\n   * Same as toObject but emits [[ Serializer#EVENT_BEGIN ]] and [[ Serializer#EVENT_END ]] events.\r\n   * @param value\r\n   * @param eventData Partial information to set in the event\r\n   * @return {any}\r\n   */\r\n  projectToObject(value: ProjectReflection, eventData?: { begin?: any, end?: any }): any {\r\n    const eventBegin = new SerializeEvent(Serializer.EVENT_BEGIN);\r\n\r\n    if (eventData && eventData.begin) {\r\n      Object.assign(eventBegin, eventData.begin);\r\n    }\r\n    eventBegin.project = value;\r\n    let project: any = eventBegin.output = {};\r\n\r\n    this.trigger(eventBegin);\r\n    project = this.toObject(value, project);\r\n\r\n    const eventEnd = new SerializeEvent(Serializer.EVENT_END);\r\n    if (eventData && eventData.end) {\r\n      Object.assign(eventEnd, eventData.end);\r\n    }\r\n    eventEnd.project = value;\r\n    eventEnd.output = project;\r\n    this.trigger(eventEnd);\r\n\r\n    return project;\r\n  }\r\n\r\n  private findRoutes(value: any): SerializerComponent<any>[] {\r\n    const routes = [];\r\n    for (let i = 0, len = this.routes.length; i < len; i++) {\r\n      if (this.routes[i](value)) {\r\n        const serializers = this.router.get(this.routes[i]).group;\r\n        for (let serializer of serializers) {\r\n          if (serializer.supports(value)) {\r\n            routes.push(serializer);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return routes;\r\n  }\r\n}\r\n"]}