{"version":3,"file":"AssetsPlugin.js","sourceRoot":"","sources":["../../../../src/lib/output/plugins/AssetsPlugin.ts"],"names":[],"mappings":";;;;;;;;AAAA,6BAA6B;AAC7B,+BAA+B;AAE/B,8CAA6D;AAC7D,sCAA0C;AAC1C,0CAAuC;AAOvC,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,8BAAiB;IADnD;;QAKI,sBAAiB,GAAG,IAAI,CAAC;IA+B7B,CAAC;IA1BG,UAAU;QACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;YACtB,CAAC,sBAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,eAAe;SAC9C,CAAC,CAAC;IACP,CAAC;IAOO,eAAe,CAAC,KAAoB;QACxC,IAAI,WAAW,GAAuB,IAAI,CAAC,IAAI,CAAC,mBAAQ,CAAC,eAAe,EAAE,EAAE,QAAQ,CAAC,CAAC;QACtF,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;QAEtD,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,EAAE,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;SAChC;aAAM;YACH,WAAW,GAAG,SAAS,CAAC;SAC3B;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC7D,IAAI,IAAI,KAAK,WAAW,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YAC7C,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SACzB;IACL,CAAC;CACJ,CAAA;AAnCY,YAAY;IADxB,sBAAS,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;GACf,YAAY,CAmCxB;AAnCY,oCAAY","sourcesContent":["import * as Path from 'path';\r\nimport * as FS from 'fs-extra';\r\n\r\nimport { Component, RendererComponent } from '../components';\r\nimport { RendererEvent } from '../events';\r\nimport { Renderer } from '../renderer';\r\n\r\n/**\r\n * A plugin that copies the subdirectory ´assets´ from the current themes\r\n * source folder to the output directory.\r\n */\r\n@Component({name: 'assets'})\r\nexport class AssetsPlugin extends RendererComponent {\r\n    /**\r\n     * Should the default assets always be copied to the output directory?\r\n     */\r\n    copyDefaultAssets = true;\r\n\r\n    /**\r\n     * Create a new AssetsPlugin instance.\r\n     */\r\n    initialize() {\r\n        this.listenTo(this.owner, {\r\n            [RendererEvent.BEGIN]: this.onRendererBegin\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Triggered before the renderer starts rendering a project.\r\n     *\r\n     * @param event  An event object describing the current render operation.\r\n     */\r\n    private onRendererBegin(event: RendererEvent) {\r\n        let fromDefault: string | undefined = Path.join(Renderer.getDefaultTheme(), 'assets');\r\n        const to = Path.join(event.outputDirectory, 'assets');\r\n\r\n        if (this.copyDefaultAssets) {\r\n            FS.copySync(fromDefault, to);\r\n        } else {\r\n            fromDefault = undefined;\r\n        }\r\n\r\n        const from = Path.join(this.owner.theme!.basePath, 'assets');\r\n        if (from !== fromDefault && FS.existsSync(from)) {\r\n            FS.copySync(from, to);\r\n        }\r\n    }\r\n}\r\n"]}