{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../../../src/lib/output/utils/resources/helpers.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAC7B,yCAAyC;AAEzC,mCAAkD;AAElD,MAAa,MAAO,SAAQ,gBAAQ;IAGhC,UAAU;QACN,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEpC,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACvB;iBAAM,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;gBACnC,IAAI,CAAC,OAAO,GAAG,IAAI,EAAE,CAAC;aACzB;iBAAM;gBACH,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;aACtC;SACJ;QAED,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;CACJ;AAlBD,wBAkBC;AAED,MAAa,WAAY,SAAQ,qBAAqB;IAGlD;QACI,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAHnB,oBAAe,GAAa,EAAE,CAAC;QAInC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE;YACnB,OAAO,KAAK,CAAC;SAChB;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAEzC,KAAK,IAAI,YAAY,IAAI,SAAS,EAAE;YAChC,MAAM,OAAO,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC,UAAU,EAAE,CAAC;YAErD,KAAK,IAAI,IAAI,IAAI,OAAO,EAAE;gBACtB,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC3C,SAAS;iBACZ;gBACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEhC,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;aAClD;SACJ;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,UAAU;QACN,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE;YACrB,OAAO,KAAK,CAAC;SAChB;QAED,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,EAAE;YACnC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,cAAc;QACV,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,gBAAgB;QACZ,KAAK,CAAC,gBAAgB,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;CACJ;AAnDD,kCAmDC","sourcesContent":["import * as Path from 'path';\r\nimport * as Handlebars from 'handlebars';\r\n\r\nimport { ResourceStack, Resource } from './stack';\r\n\r\nexport class Helper extends Resource {\r\n    private helpers: any;\r\n\r\n    getHelpers(): any {\r\n        if (!this.helpers) {\r\n            const file = require(this.fileName);\r\n\r\n            if (typeof file === 'object') {\r\n                this.helpers = file;\r\n            } else if (typeof file === 'function') {\r\n                this.helpers = file();\r\n            } else {\r\n                throw new Error('Invalid helper.');\r\n            }\r\n        }\r\n\r\n        return this.helpers;\r\n    }\r\n}\r\n\r\nexport class HelperStack extends ResourceStack<Helper> {\r\n    private registeredNames: string[] = [];\r\n\r\n    constructor() {\r\n        super(Helper, /\\.js$/);\r\n        this.addCoreHelpers();\r\n    }\r\n\r\n    activate(): boolean {\r\n        if (!super.activate()) {\r\n            return false;\r\n        }\r\n        const resources = this.getAllResources();\r\n\r\n        for (let resourceName in resources) {\r\n            const helpers = resources[resourceName].getHelpers();\r\n\r\n            for (let name in helpers) {\r\n                if (this.registeredNames.indexOf(name) !== -1) {\r\n                    continue;\r\n                }\r\n                this.registeredNames.push(name);\r\n\r\n                Handlebars.registerHelper(name, helpers[name]);\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    deactivate(): boolean {\r\n        if (!super.deactivate()) {\r\n            return false;\r\n        }\r\n\r\n        for (let name of this.registeredNames) {\r\n            Handlebars.unregisterHelper(name);\r\n        }\r\n\r\n        this.registeredNames = [];\r\n        return true;\r\n    }\r\n\r\n    addCoreHelpers() {\r\n        this.addOrigin('core', Path.join(__dirname, '..', '..', 'helpers'));\r\n    }\r\n\r\n    removeAllOrigins() {\r\n        super.removeAllOrigins();\r\n        this.addCoreHelpers();\r\n    }\r\n}\r\n"]}