{"version":3,"file":"ReflectionGroup.js","sourceRoot":"","sources":["../../../src/lib/models/ReflectionGroup.ts"],"names":[],"mappings":";;AASA,MAAa,eAAe;IA6DxB,YAAY,KAAa,EAAE,IAAoB;QA/C/C,aAAQ,GAAiB,EAAE,CAAC;QAgDxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,0BAA0B,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,6BAA6B,EAAE,CAAC,CAAC;IACnF,CAAC;IAKO,6BAA6B;QACjC,IAAI,gBAAgB,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC5B,gBAAgB,GAAG,gBAAgB,IAAI,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IAMD,QAAQ;QACJ,MAAM,MAAM,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAG,IAAI,CAAC,IAAI;SACnB,CAAC;QAEF,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,MAAM,QAAQ,GAAU,EAAE,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBAC5B,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;SACjC;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AArGD,0CAqGC","sourcesContent":["import { Reflection, ReflectionKind } from './reflections/abstract';\r\n\r\n/**\r\n * A group of reflections. All reflections in a group are of the same kind.\r\n *\r\n * Reflection groups are created by the ´GroupHandler´ in the resolving phase\r\n * of the dispatcher. The main purpose of groups is to be able to more easily\r\n * render human readable children lists in templates.\r\n */\r\nexport class ReflectionGroup {\r\n    /**\r\n     * The title, a string representation of the typescript kind, of this group.\r\n     */\r\n    title: string;\r\n\r\n    /**\r\n     * The original typescript kind of the children of this group.\r\n     */\r\n    kind: ReflectionKind;\r\n\r\n    /**\r\n     * All reflections of this group.\r\n     */\r\n    children: Reflection[] = [];\r\n\r\n    /**\r\n     * A list of generated css classes that should be applied to representations of this\r\n     * group in the generated markup.\r\n     */\r\n    cssClasses?: string;\r\n\r\n    /**\r\n     * Do all children of this group have a separate document?\r\n     *\r\n     * A bound representation of the ´ReflectionGroup.getAllChildrenHaveOwnDocument´\r\n     * that can be used within templates.\r\n     */\r\n    allChildrenHaveOwnDocument: Function;\r\n\r\n    /**\r\n     * Are all children inherited members?\r\n     */\r\n    allChildrenAreInherited?: boolean;\r\n\r\n    /**\r\n     * Are all children private members?\r\n     */\r\n    allChildrenArePrivate?: boolean;\r\n\r\n    /**\r\n     * Are all children private or protected members?\r\n     */\r\n    allChildrenAreProtectedOrPrivate?: boolean;\r\n\r\n    /**\r\n     * Are all children external members?\r\n     */\r\n    allChildrenAreExternal?: boolean;\r\n\r\n    /**\r\n     * Are any children exported declarations?\r\n     */\r\n    someChildrenAreExported?: boolean;\r\n\r\n    /**\r\n     * Create a new ReflectionGroup instance.\r\n     *\r\n     * @param title The title of this group.\r\n     * @param kind  The original typescript kind of the children of this group.\r\n     */\r\n    constructor(title: string, kind: ReflectionKind) {\r\n        this.title = title;\r\n        this.kind = kind;\r\n\r\n        this.allChildrenHaveOwnDocument = (() => this.getAllChildrenHaveOwnDocument());\r\n    }\r\n\r\n    /**\r\n     * Do all children of this group have a separate document?\r\n     */\r\n    private getAllChildrenHaveOwnDocument(): boolean {\r\n        let onlyOwnDocuments = true;\r\n        this.children.forEach((child) => {\r\n            onlyOwnDocuments = onlyOwnDocuments && !!child.hasOwnDocument;\r\n        });\r\n\r\n        return onlyOwnDocuments;\r\n    }\r\n\r\n    /**\r\n     * Return a raw object representation of this reflection group.\r\n     * @deprecated Use serializers instead\r\n     */\r\n    toObject(): any {\r\n        const result = {\r\n            title: this.title,\r\n            kind:  this.kind\r\n        };\r\n\r\n        if (this.children) {\r\n            const children: any[] = [];\r\n            this.children.forEach((child) => {\r\n                children.push(child.id);\r\n            });\r\n\r\n            result['children'] = children;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n"]}