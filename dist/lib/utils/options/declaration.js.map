{"version":3,"file":"declaration.js","sourceRoot":"","sources":["../../../../src/lib/utils/options/declaration.ts"],"names":[],"mappings":"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","sourcesContent":["export enum ParameterHint {\r\n    File,\r\n    Directory\r\n}\r\n\r\nexport enum ParameterType {\r\n    String,\r\n    Number,\r\n    Boolean,\r\n    Map,\r\n    Mixed,\r\n    Array\r\n}\r\n\r\nexport enum ParameterScope {\r\n    TypeDoc, TypeScript\r\n}\r\n\r\nexport interface DeclarationOption {\r\n    name: string;\r\n    component?: string;\r\n    short?: string;\r\n    help: string;\r\n    type?: ParameterType;\r\n    hint?: ParameterHint;\r\n    scope?: ParameterScope;\r\n    map?: {};\r\n    mapError?: string;\r\n    defaultValue?: any;\r\n    convert?: (param: OptionDeclaration, value?: any) => any;\r\n}\r\n\r\nexport class OptionDeclaration {\r\n    name: string;\r\n\r\n    short: string;\r\n\r\n    component: string;\r\n\r\n    help: string;\r\n\r\n    type: ParameterType;\r\n\r\n    hint: ParameterHint;\r\n\r\n    scope: ParameterScope;\r\n\r\n    protected map: Object | Map<string, any> | 'object';\r\n\r\n    mapError: string;\r\n\r\n    isArray: boolean;\r\n\r\n    defaultValue: any;\r\n\r\n    constructor(data: DeclarationOption) {\r\n        for (let key in data) {\r\n            this[key] = data[key];\r\n        }\r\n\r\n        this.type  = this.type  || ParameterType.String;\r\n        this.scope = this.scope || ParameterScope.TypeDoc;\r\n    }\r\n\r\n    getNames(): string[] {\r\n        const result = [this.name.toLowerCase()];\r\n\r\n        if (this.short) {\r\n            result.push(this.short.toLowerCase());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    convert(value: any, errorCallback?: Function): any {\r\n        switch (this.type) {\r\n            case ParameterType.Number:\r\n                value = parseInt(value, 10);\r\n                break;\r\n            case ParameterType.Boolean:\r\n                value = (typeof value === void 0 ? true : !!value);\r\n                break;\r\n            case ParameterType.String:\r\n                value = value || '';\r\n                break;\r\n            case ParameterType.Array:\r\n                if (!value) {\r\n                    value = [];\r\n                } else if (typeof value === 'string') {\r\n                    value = value.split(',');\r\n                }\r\n                break;\r\n            case ParameterType.Map:\r\n                const map = this.map;\r\n                if (map !== 'object') {\r\n                    const key = value ? (value + '').toLowerCase() : '';\r\n                    const values = Object.keys(map).map(key => map[key]);\r\n\r\n                    if (map instanceof Map) {\r\n                        value = map.has(key) ? map.get(key) : value;\r\n                    } else if (key in map) {\r\n                        value = map[key];\r\n                    } else if (values.indexOf(value) === -1 && errorCallback) {\r\n                        if (this.mapError) {\r\n                            errorCallback(this.mapError);\r\n                        } else {\r\n                            errorCallback('Invalid value for option \"%s\".', this.name);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n\r\n        return value;\r\n    }\r\n}\r\n"]}